name: Deploy Python Lambda (create if not exists)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.13'
      PYTHON_RUNTIME: 'python3.13'
      FUNCTION_NAME: test-actions-python  # ← 任意の関数名
      ROLE_ARN: ${{ secrets.AWS_ROLE }}  # ← Lambdaに付与するIAMロール

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -t python/
          cp lambda_function.py python/

      - name: Zip Lambda package
        run: |
          cd python
          zip -r ../function.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #aws-region: ${{ secrets.AWS_REGION }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy (create or update)
        run: |
          set -e

          if aws lambda get-function --function-name "$FUNCTION_NAME" > /dev/null 2>&1; then
            # 更新
            echo "Function exists. Updating..."
            
            # ❶ ランタイムや VPC を変えるとき
            aws lambda update-function-configuration \
              --function-name "$FUNCTION_NAME" \
              --runtime "$PYTHON_RUNTIME" \
              --vpc-config SubnetIds=${{ secrets.AWS_VPC_SUBNET_ID1 }},SecurityGroupIds=sg-02304825de0b6e8c2

            # ❷ 構成反映が終わるのを待つ（衝突対策）
            aws lambda wait function-updated-v2 --function-name "$FUNCTION_NAME"

            # ❸ コードを更新
            aws lambda update-function-code \
              --function-name "$FUNCTION_NAME" \
              --zip-file fileb://function.zip
              
          else
            # 新規作成
            echo "Function does not exist. Creating..."
            aws lambda create-function \
              --function-name "$FUNCTION_NAME" \
              --runtime $PYTHON_RUNTIME \
              --vpc-config SubnetIds=${{ secrets.AWS_VPC_SUBNET_ID1 }},SecurityGroupIds=sg-02304825de0b6e8c2 \
              --role "$ROLE_ARN" \
              --handler lambda_function.lambda_handler \
              --zip-file fileb://function.zip
          fi

          # 作成／更新完了まで待機
          aws lambda wait function-active-v2 --function-name "$FUNCTION_NAME"

      # -----------------------------------------------------------------------------
      # バージョン発行
      - name: Publish new version
        id: publish
        run: |
          VERSION=$(aws lambda publish-version \
            --function-name "$FUNCTION_NAME" \
            --description "GitHub $GITHUB_SHA" \
            --query 'Version' --output text)
          echo "📦 Published Lambda version: $VERSION"
          echo "NEW_VERSION=$VERSION" >> "$GITHUB_ENV"

      # -----------------------------------------------------------------------------
      # prod エイリアスを新バージョンへ向け直す
      - name: Point alias "prod" to new version
        run: |
          ALIAS_NAME=prod
          if aws lambda get-alias --function-name "$FUNCTION_NAME" --name "$ALIAS_NAME" >/dev/null 2>&1; then
            echo "🔄 Updating alias $ALIAS_NAME → version $NEW_VERSION"
            aws lambda update-alias \
              --function-name "$FUNCTION_NAME" \
              --name "$ALIAS_NAME" \
              --function-version "$NEW_VERSION"
          else
            echo "✨ Creating alias $ALIAS_NAME → version $NEW_VERSION"
            aws lambda create-alias \
              --function-name "$FUNCTION_NAME" \
              --name "$ALIAS_NAME" \
              --function-version "$NEW_VERSION"
          fi
